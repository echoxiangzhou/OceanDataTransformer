"""Add NC files tables

Revision ID: a4e4d5bc6d0b
Revises: f82923a1ca06
Create Date: 2025-06-07 14:51:29.678572

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'a4e4d5bc6d0b'
down_revision: Union[str, None] = 'f82923a1ca06'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nc_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('converted_filename', sa.String(length=255), nullable=True),
    sa.Column('original_format', sa.String(length=50), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('conversion_status', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('institution', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('history', sa.Text(), nullable=True),
    sa.Column('references', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('latitude_min', sa.Float(), nullable=True),
    sa.Column('latitude_max', sa.Float(), nullable=True),
    sa.Column('longitude_min', sa.Float(), nullable=True),
    sa.Column('longitude_max', sa.Float(), nullable=True),
    sa.Column('depth_min', sa.Float(), nullable=True),
    sa.Column('depth_max', sa.Float(), nullable=True),
    sa.Column('time_coverage_start', sa.DateTime(), nullable=True),
    sa.Column('time_coverage_end', sa.DateTime(), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('dimensions', sa.JSON(), nullable=True),
    sa.Column('cf_version', sa.String(length=20), nullable=True),
    sa.Column('conventions', sa.String(length=100), nullable=True),
    sa.Column('is_cf_compliant', sa.Boolean(), nullable=True),
    sa.Column('quality_flags', sa.JSON(), nullable=True),
    sa.Column('data_quality_score', sa.Float(), nullable=True),
    sa.Column('processing_log', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('conversion_parameters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nc_files_converted_filename'), 'nc_files', ['converted_filename'], unique=False)
    op.create_index(op.f('ix_nc_files_id'), 'nc_files', ['id'], unique=False)
    op.create_index(op.f('ix_nc_files_original_filename'), 'nc_files', ['original_filename'], unique=False)
    op.drop_index('ix_netcdf_files_id', table_name='netcdf_files')
    op.drop_table('netcdf_files')
    op.add_column('conversion_tasks', sa.Column('original_filename', sa.String(length=255), nullable=False))
    op.add_column('conversion_tasks', sa.Column('original_format', sa.String(length=50), nullable=False))
    op.add_column('conversion_tasks', sa.Column('nc_file_id', sa.Integer(), nullable=True))
    op.add_column('conversion_tasks', sa.Column('started_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('conversion_tasks', 'netcdf_file_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('conversion_tasks', sa.Column('netcdf_file_id', mysql.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('conversion_tasks', 'started_at')
    op.drop_column('conversion_tasks', 'nc_file_id')
    op.drop_column('conversion_tasks', 'original_format')
    op.drop_column('conversion_tasks', 'original_filename')
    op.create_table('netcdf_files',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('original_filename', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('converted_filename', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('file_path', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=False),
    sa.Column('file_size', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('format_version', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('dimensions', mysql.JSON(), nullable=True),
    sa.Column('variables', mysql.JSON(), nullable=True),
    sa.Column('global_attributes', mysql.JSON(), nullable=True),
    sa.Column('time_range', mysql.JSON(), nullable=True),
    sa.Column('spatial_bounds', mysql.JSON(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_netcdf_files_id', 'netcdf_files', ['id'], unique=False)
    op.drop_index(op.f('ix_nc_files_original_filename'), table_name='nc_files')
    op.drop_index(op.f('ix_nc_files_id'), table_name='nc_files')
    op.drop_index(op.f('ix_nc_files_converted_filename'), table_name='nc_files')
    op.drop_table('nc_files')
    # ### end Alembic commands ###
