"""add_missing_fields_only

Revision ID: d82923a1ca09
Revises: a4e4d5bc6d0b
Create Date: 2025-06-08 16:10:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'd82923a1ca09'
down_revision: Union[str, None] = 'a4e4d5bc6d0b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add missing columns to algorithms table (keep ID as INT for now)
    op.add_column('algorithms', sa.Column('language', sa.String(length=20), nullable=False, server_default='python'))
    op.add_column('algorithms', sa.Column('author', sa.String(length=100), nullable=False, server_default='Unknown'))
    op.add_column('algorithms', sa.Column('institution', sa.String(length=200), nullable=True))
    op.add_column('algorithms', sa.Column('source_code_path', sa.String(length=500), nullable=True))
    op.add_column('algorithms', sa.Column('input_formats', sa.JSON(), nullable=True))
    op.add_column('algorithms', sa.Column('output_formats', sa.JSON(), nullable=True))
    op.add_column('algorithms', sa.Column('parameters', sa.JSON(), nullable=True))
    op.add_column('algorithms', sa.Column('is_public', sa.Boolean(), nullable=True, server_default='1'))
    op.add_column('algorithms', sa.Column('usage_count', sa.Integer(), nullable=True, server_default='0'))
    op.add_column('algorithms', sa.Column('rating', sa.Float(), nullable=True, server_default='0.0'))
    op.add_column('algorithms', sa.Column('avg_execution_time', sa.Integer(), nullable=True))
    op.add_column('algorithms', sa.Column('max_memory_usage', sa.Integer(), nullable=True))

    # Create algorithm_executions table (using INT for algorithm_id to match algorithms.id)
    op.create_table('algorithm_executions',
        sa.Column('id', sa.String(length=50), nullable=False),
        sa.Column('algorithm_id', sa.Integer(), nullable=False),  # Changed to Integer to match algorithms.id
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=True, default='queued'),
        sa.Column('progress', sa.Integer(), nullable=True, default=0),
        sa.Column('input_data', sa.JSON(), nullable=True),
        sa.Column('input_files', sa.JSON(), nullable=True),
        sa.Column('output_data', sa.JSON(), nullable=True),
        sa.Column('output_files', sa.JSON(), nullable=True),
        sa.Column('parameters', sa.JSON(), nullable=True),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('logs', sa.JSON(), nullable=True),
        sa.Column('container_id', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
        sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['algorithm_id'], ['algorithms.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_algorithm_executions_id'), 'algorithm_executions', ['id'], unique=False)
    op.create_index(op.f('ix_algorithm_executions_status'), 'algorithm_executions', ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_algorithm_executions_status'), table_name='algorithm_executions')
    op.drop_index(op.f('ix_algorithm_executions_id'), table_name='algorithm_executions')
    op.drop_table('algorithm_executions')
    
    # Remove added columns from algorithms table
    op.drop_column('algorithms', 'max_memory_usage')
    op.drop_column('algorithms', 'avg_execution_time')
    op.drop_column('algorithms', 'rating')
    op.drop_column('algorithms', 'usage_count')
    op.drop_column('algorithms', 'is_public')
    op.drop_column('algorithms', 'parameters')
    op.drop_column('algorithms', 'output_formats')
    op.drop_column('algorithms', 'input_formats')
    op.drop_column('algorithms', 'source_code_path')
    op.drop_column('algorithms', 'institution')
    op.drop_column('algorithms', 'author')
    op.drop_column('algorithms', 'language')
    # ### end Alembic commands ###